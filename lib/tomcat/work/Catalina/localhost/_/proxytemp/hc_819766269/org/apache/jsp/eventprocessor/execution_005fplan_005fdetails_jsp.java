/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.70
 * Generated at: 2016-10-05 10:41:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eventprocessor;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.event.processor.stub.EventProcessorAdminServiceStub;
import org.wso2.carbon.event.processor.stub.types.ExecutionPlanConfigurationDto;
import org.wso2.carbon.event.processor.ui.EventProcessorUIUtils;
import org.wso2.carbon.event.processor.ui.executionPlan.flow.ExecutionPlanFlow;

public final class execution_005fplan_005fdetails_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1472204874000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1472204874000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fbundle_005f0.setParent(null);
      // /eventprocessor/execution_plan_details.jsp(24,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
      _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.event.processor.ui.i18n.Resources");
      int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
      if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_fmt_005fbundle_005f0.doInitBody();
        }
        do {
          out.write("\n");
          out.write("\n");
          out.write("    ");
          //  carbon:breadcrumb
          org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
          _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
          _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
          // /eventprocessor/execution_plan_details.jsp(26,4) name = label type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("details");
          // /eventprocessor/execution_plan_details.jsp(26,4) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.event.processor.ui.i18n.Resources");
          // /eventprocessor/execution_plan_details.jsp(26,4) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
          // /eventprocessor/execution_plan_details.jsp(26,4) name = request type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
          int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
          if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
            return;
          }
          _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
          out.write("\n");
          out.write("\n");
          out.write("    <script type=\"text/javascript\" src=\"../admin/js/breadcrumbs.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../admin/js/cookies.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../yui/build/yahoo-dom-event/yahoo-dom-event.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../yui/build/connection/connection-min.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../eventprocessor/js/execution_plans.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../eventprocessor/js/eventprocessor_constants.js\"></script>\n");
          out.write("    <script type=\"text/javascript\" src=\"../ajax/js/prototype.js\"></script>\n");
          out.write("\n");
          out.write("    <link rel=\"stylesheet\" href=\"../eventprocessor/css/exeFlow.css\">\n");
          out.write("    <script src=\"https://d3js.org/d3.v3.min.js\" charset=\"utf-8\"></script>\n");
          out.write("    <script src=\"../eventprocessor/js/dagre-d3.js\"></script>\n");
          out.write("\n");
          out.write("    <link type=\"text/css\" href=\"../resources/css/registry.css\" rel=\"stylesheet\"/>\n");
          out.write("\n");
          out.write("    <script type=\"text/javascript\">\n");
          out.write("        SVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(elem) {\n");
          out.write("                    return elem.getScreenCTM().inverse().multiply(this.getScreenCTM());\n");
          out.write("                };\n");
          out.write("        function doDeleteExecutionPlan(executionPlan) {\n");
          out.write("            CARBON.showConfirmationDialog(\"Are you sure want to delete execution plan:\" + executionPlan,\n");
          out.write("                    function () {\n");
          out.write("                        new Ajax.Request('../eventprocessor/delete_execution_plan_ajaxprocessor.jsp', {\n");
          out.write("                            method: 'POST',\n");
          out.write("                            asynchronous: false,\n");
          out.write("                            parameters: {\n");
          out.write("                                executionPlan: executionPlan\n");
          out.write("                            }, onSuccess: function (msg) {\n");
          out.write("                                if (\"success\" == msg.responseText.trim()) {\n");
          out.write("                                    CARBON.showInfoDialog(\"Execution plan successfully deleted.\", function () {\n");
          out.write("                                        window.location.href = \"../eventprocessor/index.jsp?region=region1&item=execution_plan_menu.jsp\";\n");
          out.write("                                    });\n");
          out.write("                                } else {\n");
          out.write("                                    CARBON.showErrorDialog(\"Failed to delete execution plan, Exception: \" + msg.responseText.trim());\n");
          out.write("                                }\n");
          out.write("                            }\n");
          out.write("                        })\n");
          out.write("                    }, null, null);\n");
          out.write("        }\n");
          out.write("    </script>\n");
          out.write("\n");
          out.write("    ");
          out.write("\n");
          out.write("    ");

        String executionPlanName = request.getParameter("execPlanName");
        String executionPlanPath = request.getParameter("execPlanPath");
        String executionPlan = request.getParameter("execPlan");

        EventProcessorAdminServiceStub processorAdminServiceStub = EventProcessorUIUtils.getEventProcessorAdminService(config, session, request);
        ExecutionPlanConfigurationDto configurationDto = processorAdminServiceStub.getActiveExecutionPlanConfiguration(executionPlan);
        String planFlow = configurationDto.getExecutionPlan();

        ExecutionPlanFlow exePlanFlow = new ExecutionPlanFlow();
        String executionPlan_nodes = exePlanFlow.getExecutionPlanFlow(planFlow, config, session, request);
    
          out.write("\n");
          out.write("\n");
          out.write("    <script type=\"text/javascript\">\n");
          out.write("        window.onload = function () {\n");
          out.write("            ");
 if(executionPlan_nodes != null){ 
          out.write("\n");
          out.write("                tryDrawProcessingFlowInfo();\n");
          out.write("                tryDraw();\n");
          out.write("            ");
  } 
          out.write("\n");
          out.write("        };\n");
          out.write("        function tryDrawProcessingFlowInfo() {\n");
          out.write("            var g = new dagreD3.graphlib.Graph().setGraph({});\n");
          out.write("            g.setNode(\"1\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor:default;\"> <span class=\"typeInfo typeInfo-I\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Import Stream</span></div>'\n");
          out.write("            });\n");
          out.write("            g.setNode(\"2\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor:default;\"> <span class=\"typeInfo typeInfo-E\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Export Stream</span></div>'\n");
          out.write("            });\n");
          out.write("            g.setNode(\"3\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor:default;\"> <span class=\"typeInfo typeInfo-S\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Stream</span></div>'\n");
          out.write("            });\n");
          out.write("            g.setNode(\"4\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor:default;\"> <span class=\"typeInfo typeInfo-T\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Table</span></div>'\n");
          out.write("            });\n");
          out.write("            g.setNode(\"5\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor:default;\"> <span class=\"typeInfo typeInfo-Q\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Query</span></div>'\n");
          out.write("            });\n");
          out.write("            g.setNode(\"6\", {\n");
          out.write("                labelType: \"html\",\n");
          out.write("                label: '<div id=flowdivInfo onmouseover= \"\" style=\"cursor: default;\"> <span class=\"typeInfo typeInfo-PW\"></span><span  name=\"nameElement\" class=\"nameInfo\" style=\"margin-right: 10px;\">Partition</span></div>'\n");
          out.write("            });\n");
          out.write("            //left to right layout\n");
          out.write("            g.setGraph({\n");
          out.write("                nodesep: 70,\n");
          out.write("                ranksep: 50,\n");
          out.write("                marginx: 20,\n");
          out.write("                marginy: 20\n");
          out.write("            });\n");
          out.write("            g.nodes().forEach(function (v) {\n");
          out.write("                var node = g.node(v);\n");
          out.write("                node.padding = 0;\n");
          out.write("            });\n");
          out.write("            var render = new dagreD3.render();\n");
          out.write("            var svg = d3.select('#flowdivInfo'),\n");
          out.write("                    svgGroup = svg.append('g');\n");
          out.write("            render(svgGroup, g);\n");
          out.write("        }\n");
          out.write("        function tryDraw() {\n");
          out.write("            // Create a new directed graph\n");
          out.write("            var g = new dagreD3.graphlib.Graph({compound: true})\n");
          out.write("                    .setGraph({})\n");
          out.write("                    .setDefaultEdgeLabel(function () {\n");
          out.write("                        return {};\n");
          out.write("                    });\n");
          out.write("            var exeFlow = ");
          out.print(executionPlan_nodes );
          out.write(".replace(/\\n/g, \"\\\\n\").replace(/\\t/g, \"\\\\t\").replace(/\\'/g, \"\");\n");
          out.write("            var queryFlow = jQuery.parseJSON(exeFlow);\n");
          out.write("            //create nodes\n");
          out.write("            var nodes = queryFlow.nodes;\n");
          out.write("            for (var i = 0; i < nodes.length; i++) {\n");
          out.write("                if (nodes[i].nodeTable == 'T') {\n");
          out.write("                    nodes[i].nodeclass = 'T';\n");
          out.write("                }\n");
          out.write("                g.setNode(nodes[i].id, {\n");
          out.write("                    labelType: \"html\",\n");
          out.write("                    label: '<div id=flowdiv onmouseover= \"\" style=\"cursor:default;\"data-toggle=\"tooltip\" title=\\'' + nodes[i].toolTip + '\\'><span class=\"type type-' + nodes[i].nodeclass + '\"></span><span  name=\"nameElement\" class=\"name\" style=\"margin-right: 10px;\">' + nodes[i].label + '</span></div>'\n");
          out.write("                });\n");
          out.write("            }\n");
          out.write("            g.nodes().forEach(function (v) {\n");
          out.write("                var node = g.node(v);\n");
          out.write("                //Round the corner's of each node\n");
          out.write("                node.rx = node.ry = 5;\n");
          out.write("                //remove the space around the content\n");
          out.write("                node.padding = 0;\n");
          out.write("            });\n");
          out.write("            // node which used to group\n");
          out.write("            var partitionWith = queryFlow.partitionWith;\n");
          out.write("            for (var i = 0; i < partitionWith.length; i++) {\n");
          out.write("                g.setNode(partitionWith[i].id, {\n");
          out.write("                    labelType: \"html\",\n");
          out.write("                    label: '<div onmouseover= \"\" style=\"cursor:default;\"data-toggle=\"tooltip\" title=\\'' + partitionWith[i].toolTip + '\\'> <span  name=\"nameElement\" class=\"name\" style=\"margin-right: 10px;\">' + partitionWith[i].label + '</span></div>',\n");
          out.write("                    clusterLabelPos: 'bottom',\n");
          out.write("                    style: 'fill: #d3d7e8',\n");
          out.write("                });\n");
          out.write("            }\n");
          out.write("            //set parent\n");
          out.write("            for (var i = 0; i < nodes.length; i++) {\n");
          out.write("                for (var k = 0; k < partitionWith.length; k++) {\n");
          out.write("                    if (partitionWith[k].id == nodes[i].parent) {\n");
          out.write("                        g.setParent(nodes[i].id, partitionWith[k].id);\n");
          out.write("                    }\n");
          out.write("                }\n");
          out.write("            }\n");
          out.write("            //create edges\n");
          out.write("            var edges = queryFlow.edges;\n");
          out.write("            for (var i = 0; i < edges.length; i++) {\n");
          out.write("                g.setEdge(edges[i].from, edges[i].to, {lineInterpolate: 'basis'});\n");
          out.write("            }\n");
          out.write("            //left to right layout\n");
          out.write("            g.setGraph({\n");
          out.write("                nodesep: 20,\n");
          out.write("                ranksep: 50,\n");
          out.write("                rankdir: \"LR\",\n");
          out.write("                marginx: 10,\n");
          out.write("                marginy: 10\n");
          out.write("            });\n");
          out.write("            // Create the renderer\n");
          out.write("            var render = new dagreD3.render();\n");
          out.write("            // Set up an SVG group so that we can translate the final graph.\n");
          out.write("            var svg = d3.select('#flowdiv'),\n");
          out.write("                    svgGroup = svg.append(\"g\").attr(\"transform\", \"translate(0,0)scale(0.75)\");\n");
          out.write("            // Run the renderer. This is what draws the final graph.\n");
          out.write("            render(svgGroup, g);\n");
          out.write("            svg.attr(\"width\", g.graph().width * 0.75).attr(\"height\", g.graph().height * 0.75);\n");
          out.write("\n");
          out.write("            // Set up zoom support\n");
          out.write("//        var zoom = d3.behavior.zoom().on(\"zoom\", function() {\n");
          out.write("//              svgGroup.attr(\"transform\", \"translate(\" + d3.event.translate + \")\" +\n");
          out.write("//                                      \"scale(\" + d3.event.scale + \")\");\n");
          out.write("//            });\n");
          out.write("//        svg.call(zoom);\n");
          out.write("            // Zoom and scale to fit\n");
          out.write("//        var graphWidth = g.graph().width + 80;\n");
          out.write("//        var graphHeight = g.graph().height + 40;\n");
          out.write("//        var width = parseInt(svg.style(\"width\").replace(/px/, \"\"));\n");
          out.write("//        var height = parseInt(svg.style(\"height\").replace(/px/, \"\"));\n");
          out.write("//        var zoomScale = Math.min(width / graphWidth, height / graphHeight);\n");
          out.write("//        var translate = [(width/2) - ((graphWidth*zoomScale)/2), (height/2) - ((graphHeight*zoomScale)/2)];\n");
          out.write("//        zoom.translate(translate);\n");
          out.write("//        zoom.scale(zoomScale);\n");
          out.write("//        zoom.event(isUpdate ? svg.transition().duration(500) : d3.select(\"svg\"));\n");
          out.write("//        // Center the graph\n");
          out.write("//        var xCenterOffset = (svg.attr(\"width\") - g.graph().width) / 2;\n");
          out.write("//        svgGroup.attr(\"transform\", \"translate(\" + xCenterOffset + \", 20)\");\n");
          out.write("//        svg.attr(\"height\", g.graph().height + 40);\n");
          out.write("        }\n");
          out.write("    </script>\n");
          out.write("\n");
          out.write("    <div id=\"middle\">\n");
          out.write("        <h2 style=\"padding-bottom: 7px\">Event Processor Details\n");
          out.write("    <span style=\"float: right; font-size:75%\">\n");
          out.write("        ");
 if (configurationDto.getEditable()) { 
          out.write("\n");
          out.write("            ");
 if (configurationDto.getStatisticsEnabled()) {
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <div id=\"disableStat");
          out.print( configurationDto.getName());
          out.write("\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"disableStat('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/static-icon.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("                <div id=\"enableStat");
          out.print( configurationDto.getName());
          out.write("\"\n");
          out.write("                     style=\"display:none;\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"enableStat('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/static-icon-disabled.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("            ");
 } else { 
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <div id=\"enableStat");
          out.print( configurationDto.getName());
          out.write("\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"enableStat('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/static-icon-disabled.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("                <div id=\"disableStat");
          out.print( configurationDto.getName());
          out.write("\"\n");
          out.write("                     style=\"display:none\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"disableStat('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/static-icon.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("            ");
 }
                if (configurationDto.getTracingEnabled()) {
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <div id=\"disableTracing");
          out.print( configurationDto.getName());
          out.write("\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"disableTracing('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/trace-icon.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("                <div id=\"enableTracing");
          out.print( configurationDto.getName());
          out.write("\"\n");
          out.write("                     style=\"display:none;\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"enableTracing('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/trace-icon-disabled.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("            ");
 } else { 
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <div id=\"enableTracing");
          out.print( configurationDto.getName() );
          out.write("\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"enableTracing('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/trace-icon-disabled.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("                <div id=\"disableTracing");
          out.print( configurationDto.getName() );
          out.write("\"\n");
          out.write("                     style=\"display:none\">\n");
          out.write("                    <a href=\"#\"\n");
          out.write("                       onclick=\"disableTracing('");
          out.print( configurationDto.getName() );
          out.write("')\"\n");
          out.write("                       class=\"icon-link\"\n");
          out.write("                       style=\"background-image:url(../admin/images/trace-icon.gif);\">");
          if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</a>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("            ");
 } 
          out.write("\n");
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <a style=\"background-image: url(../admin/images/delete.gif);\"\n");
          out.write("                   class=\"icon-link\"\n");
          out.write("                   onclick=\"doDeleteExecutionPlan('");
          out.print(configurationDto.getName());
          out.write("')\"><font\n");
          out.write("                        color=\"#4682b4\">Delete</font></a>\n");
          out.write("            </div>\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <a style=\"background-image: url(../admin/images/edit.gif);\"\n");
          out.write("                   class=\"icon-link\"\n");
          out.write("                   href=\"../eventprocessor/edit_execution_plan.jsp?ordinal=1&execPlanName=");
          out.print(configurationDto.getName());
          out.write("\"><font\n");
          out.write("                        color=\"#4682b4\">Edit</font></a>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("            ");
 } else { 
          out.write("\n");
          out.write("            <div style=\"display: inline-block\">\n");
          out.write("                <div id=\"cappArtifact");
          out.print( configurationDto.getName());
          out.write("\">\n");
          out.write("                    <div style=\"background-image: url(images/capp.gif);\" class=\"icon-nolink-nofloat\">\n");
          out.write("                        ");
          if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</div>\n");
          out.write("                </div>\n");
          out.write("            </div>\n");
          out.write("\n");
          out.write("            ");
 } 
          out.write("\n");
          out.write("    </span>\n");
          out.write("        </h2>\n");
          out.write("\n");
          out.write("        <div id=\"workArea\">\n");
          out.write("            <table style=\"width:100%\" id=\"eventProcessorDetails\" class=\"styledLeft noBorders spacer-bot\">\n");
          out.write("                <tbody>\n");
          out.write("                <tr>\n");
          out.write("                    <td>\n");
          out.write("\n");
          out.write("                        <table width=\"100%\" style=\"border: 0px\">\n");
          out.write("\n");
          out.write("                                ");
          out.write("\n");
          out.write("\n");
          out.write("                            <link rel=\"stylesheet\" href=\"../eventprocessor/css/codemirror.css\"/>\n");
          out.write("                            <script src=\"../eventprocessor/js/codemirror.js\"></script>\n");
          out.write("                            <script src=\"../eventprocessor/js/sql.js\"></script>\n");
          out.write("\n");
          out.write("                            <style>\n");
          out.write("                                .CodeMirror {\n");
          out.write("                                    border-top: 1px solid #cccccc;\n");
          out.write("                                    border-bottom: 1px solid black;\n");
          out.write("                                    height: auto;\n");
          out.write("                                }\n");
          out.write("                            </style>\n");
          out.write("\n");
          out.write("                            <script>\n");
          out.write("                                var init = function () {\n");
          out.write("                                    var mime = MIME_TYPE_SIDDHI_QL;\n");
          out.write("\n");
          out.write("                                    // get mime type\n");
          out.write("                                    if (window.location.href.indexOf('mime=') > -1) {\n");
          out.write("                                        mime = window.location.href.substr(window.location.href.indexOf('mime=') + 5);\n");
          out.write("                                    }\n");
          out.write("\n");
          out.write("                                    window.queryEditor = CodeMirror.fromTextArea(document.getElementById('queryExpressions'), {\n");
          out.write("                                        mode: mime,\n");
          out.write("                                        indentWithTabs: true,\n");
          out.write("                                        smartIndent: true,\n");
          out.write("                                        lineNumbers: true,\n");
          out.write("                                        matchBrackets: true,\n");
          out.write("                                        autofocus: true,\n");
          out.write("                                        readOnly: true,\n");
          out.write("                                        viewportMargin: Infinity\n");
          out.write("                                    });\n");
          out.write("                                };\n");
          out.write("                            </script>\n");
          out.write("\n");
          out.write("                            <script type=\"text/javascript\">\n");
          out.write("                                jQuery(document).ready(function () {\n");
          out.write("                                    init();\n");
          out.write("                                });\n");
          out.write("                            </script>\n");
          out.write("\n");
          out.write("                                ");
          out.write("\n");
          out.write("\n");
          out.write("                             ");
 if(executionPlan_nodes != null){ 
          out.write("\n");
          out.write("                            <tr>\n");
          out.write("                                <td>\n");
          out.write("                                    <b> Execution Plan Flow </b>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                            <tr>\n");
          out.write("                                <td colspan=\"2\">\n");
          out.write("                                    <div>\n");
          out.write("                                        <svg id=flowdivInfo width=100% height=60 style=\"border: 0px\"></svg>\n");
          out.write("                                    </div>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                            <tr>\n");
          out.write("                                <td colspan=\"2\">\n");
          out.write("                                    <div style=\"border:1px solid #ccc\">\n");
          out.write("                                        <svg id=flowdiv width=100% height=350 style=\"border:0px\"></svg>\n");
          out.write("                                    </div>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                            ");
 } 
          out.write("\n");
          out.write("                            <tr>\n");
          out.write("                                <td colspan=\"2\">\n");
          out.write("                                    <b>");
          if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</b>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                                ");
          out.write("\n");
          out.write("                            <tr>\n");
          out.write("                                <td colspan=\"2\">\n");
          out.write("                                    <style>\n");
          out.write("                                        div#workArea table#streamDefinitionsTable tbody tr td {\n");
          out.write("                                            padding-left: 45px !important;\n");
          out.write("                                        }\n");
          out.write("                                    </style>\n");
          out.write("                                    <table width=\"100%\" style=\"border: 1px solid #cccccc\">\n");
          out.write("                                            ");
          out.write("\n");
          out.write("                                        <tr>\n");
          out.write("                                            <td>\n");
          out.write("                    <textarea class=\"queryExpressionsTextArea\" style=\"width:100%;\"\n");
          out.write("                              id=\"queryExpressions\"\n");
          out.write("                              name=\"queryExpressions\" readonly>");
          out.print( configurationDto.getExecutionPlan() );
          out.write("\n");
          out.write("                    </textarea>\n");
          out.write("                                            </td>\n");
          out.write("                                        </tr>\n");
          out.write("                                    </table>\n");
          out.write("                                </td>\n");
          out.write("                            </tr>\n");
          out.write("                        </table>\n");
          out.write("                </tbody>\n");
          out.write("            </table>\n");
          out.write("        </div>\n");
          out.write("    </div>\n");
          int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        return;
      }
      _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(236,86) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f0.setKey("stat.disable.link");
    int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(244,95) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f1.setKey("stat.enable.link");
    int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(254,95) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f2.setKey("stat.enable.link");
    int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(262,86) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f3.setKey("stat.disable.link");
    int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(273,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f4.setKey("trace.disable.link");
    int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(281,94) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f5.setKey("trace.enable.link");
    int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(291,94) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f6.setKey("trace.enable.link");
    int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(299,85) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f7.setKey("trace.disable.link");
    int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(323,24) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f8.setKey("capp.artifact.message");
    int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventprocessor/execution_plan_details.jsp(406,39) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f9.setKey("execution.plan");
    int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
    return false;
  }
}
